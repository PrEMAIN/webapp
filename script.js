// –¢–µ–∫—É—â–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
let selectedDate = null;
let selectedSlot = null;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è
const datePicker = flatpickr("#datePicker", {
  dateFormat: "d.m.Y",
  locale: "ru",
  defaultDate: new Date(),
  onChange: function(selectedDates) {
    selectedDate = selectedDates[0].toISOString().split("T")[0];
    generateTimeGrid();
  }
});

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–∏
function generateTimeGrid() {
  const timeGrid = document.getElementById("timeGrid");
  timeGrid.innerHTML = "";

  // –°–æ–∑–¥–∞—ë–º –±–ª–æ–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ —Å 8:00 –¥–æ 24:00
  for (let hour = 8; hour < 24; hour++) {
    const timeBlock = document.createElement("div");
    timeBlock.className = "time-block";
    
    const timeHeader = document.createElement("div");
    timeHeader.className = "time-header";
    timeHeader.innerHTML = `
      <span>${hour}:00 - ${hour+1}:00</span>
      <button class="add-btn" data-hour="${hour}">+</button>
    `;
    
    const tasksContainer = document.createElement("div");
    tasksContainer.className = "tasks-container";
    
    const taskList = document.createElement("ul");
    taskList.className = "task-list";
    tasksContainer.appendChild(taskList);
    
    timeBlock.appendChild(timeHeader);
    timeBlock.appendChild(tasksContainer);
    timeGrid.appendChild(timeBlock);
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –∑–∞–≥–æ–ª–æ–≤–æ–∫
    timeHeader.addEventListener("click", function() {
      tasksContainer.classList.toggle("open");
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    timeHeader.querySelector(".add-btn").addEventListener("click", function(e) {
      e.stopPropagation();
      selectedSlot = `${hour}:00 - ${hour+1}:00`;
      document.getElementById("selectedTimeSlot").textContent = selectedSlot;
      document.getElementById("taskModal").style.display = "block";
      document.getElementById("taskInput").focus();
    });
  }

  loadTasks();
}

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è saveTask
function saveTask() {
  const text = document.getElementById("taskInput").value.trim();
  const category = document.getElementById("categorySelect").value;

  if (!text) {
    alert("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏!");
    return;
  }

  const tasks = JSON.parse(localStorage.getItem("tasks") || "{}");
  
  // –ï—Å–ª–∏ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –¥–∞—Ç—ã –µ—â—ë –Ω–µ—Ç –∑–∞–¥–∞—á, —Å–æ–∑–¥–∞—ë–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
  if (!tasks[selectedDate]) {
    tasks[selectedDate] = [];
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É
  tasks[selectedDate].push({ 
    text, 
    done: false, 
    category,
    timeSlot: selectedSlot
  });
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
  localStorage.setItem("tasks", JSON.stringify(tasks));
  
  // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  closeModal();
  
  // –ü–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ—Å–æ–∑–¥–∞—ë–º —Å–µ—Ç–∫—É –≤—Ä–µ–º–µ–Ω–∏ —Å –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
  generateTimeGrid();
}

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è loadTasks
function loadTasks() {
  const tasks = JSON.parse(localStorage.getItem("tasks") || "{}");
  const dateTasks = tasks[selectedDate] || [];

  dateTasks.forEach(task => {
    const hour = parseInt(task.timeSlot.split(":")[0]);
    const timeBlocks = document.querySelectorAll(".time-block");
    const targetBlock = timeBlocks[hour - 8];
    
    if (targetBlock) {
      const taskList = targetBlock.querySelector(".task-list");
      const taskItem = document.createElement("li");
      taskItem.className = `task-item ${task.category}`;
      taskItem.innerHTML = `
        <input type="checkbox" ${task.done ? 'checked' : ''} 
               onchange="toggleTask('${selectedDate}', ${dateTasks.indexOf(task)})">
        <span class="${task.done ? 'completed' : ''}">${task.text}</span>
        <button class="delete-btn" onclick="deleteTask(event, '${selectedDate}', ${dateTasks.indexOf(task)})">‚ùå</button>
      `;
      taskList.appendChild(taskItem);
      
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å–∫—Ä—ã–≤–∞–µ–º –±–ª–æ–∫, –µ—Å–ª–∏ —Ç–∞–º –µ—Å—Ç—å –∑–∞–¥–∞—á–∏
      targetBlock.querySelector(".tasks-container").classList.add("open");
    }
  });
}

// –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
function deleteTask(event, date, index) {
  event.stopPropagation();
  if (confirm("–£–¥–∞–ª–∏—Ç—å —ç—Ç—É –∑–∞–¥–∞—á—É?")) {
    const tasks = JSON.parse(localStorage.getItem("tasks"));
    tasks[date].splice(index, 1);
    localStorage.setItem("tasks", JSON.stringify(tasks));
    generateTimeGrid();
  }
}

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω—ã–º –æ–∫–Ω–æ–º
function closeModal() {
  document.getElementById("taskModal").style.display = "none";
  document.getElementById("taskInput").value = "";
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
function toggleTheme() {
  const currentTheme = document.body.getAttribute("data-theme");
  const newTheme = currentTheme === "dark" ? "light" : "dark";
  document.body.setAttribute("data-theme", newTheme);
  localStorage.setItem("theme", newTheme);
  document.getElementById("themeToggle").textContent = newTheme === "dark" ? "‚òÄÔ∏è" : "üåô";
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener("DOMContentLoaded", () => {
  // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–º—ã
  const savedTheme = localStorage.getItem("theme") || "light";
  document.body.setAttribute("data-theme", savedTheme);
  document.getElementById("themeToggle").textContent = savedTheme === "dark" ? "‚òÄÔ∏è" : "üåô";
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —Ç–µ–º—ã
  document.getElementById("themeToggle").addEventListener("click", toggleTheme);
  
  // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã
  selectedDate = new Date().toISOString().split("T")[0];
  generateTimeGrid();
});